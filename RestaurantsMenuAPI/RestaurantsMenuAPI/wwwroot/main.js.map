{"version":3,"sources":["./src/app/tab-view/tab-view.component.html","./src/app/tab-view/tab-view.component.ts","./src/app/directives/add-row.directive.ts","./src/environments/environment.ts","./src/app/helpers/utils.ts","./src/app/shared/models/base.model.ts","./src/app/shared/models/language.model.ts","./src/app/restaurant/product/product.component.ts","./src/app/restaurant/product/product.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/category/category/category.component.ts","./src/app/category/category/category.component.html","./src/app/dialogs/category/category-select-dialog/category-select-dialog.component.html","./src/app/dialogs/category/category-select-dialog/category-select-dialog.component.ts","./src/app/restaurant/restaurant.component.ts","./src/app/restaurant/restaurant.component.html","./src/app/restaurant/restaurant-category/restaurant-category.component.ts","./src/app/restaurant/restaurant-category/restaurant-category.component.html","./src/app/shared/services/restaurant.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"card\">\r\n  <div class=\"card\">\r\n    <p-tabView styleClass=\"tabview-custom\">\r\n      <p-tabPanel>\r\n        <ng-template pTemplate=\"header\">\r\n          <i class=\"pi pi-home\"></i>\r\n          <span class=\"tabspan-custom\">Restaurants</span>\r\n        </ng-template>\r\n        <app-restaurant></app-restaurant>\r\n      </p-tabPanel>\r\n\r\n      <p-tabPanel header=\"Categories\">\r\n        <ng-template pTemplate=\"header\">\r\n          <i class=\"pi pi-user\"></i>\r\n          <span class=\"tabspan-custom\">Categories</span>\r\n        </ng-template>\r\n         <app-category></app-category>\r\n      </p-tabPanel>\r\n    </p-tabView>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tab-menu',\r\n  templateUrl: './tab-view.component.html',\r\n  styleUrls: ['./tab-view.component.scss']\r\n})\r\nexport class TabViewComponent implements OnInit {\r\n\r\nconstructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, Input, HostListener } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Directive({\r\n    selector: '[pAddRow]',\r\n})\r\nexport class AddRowDirective {\r\n    @Input() table!: Table;\r\n    @Input() newRow: any;\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event: Event) {\r\n        // if (!this.table.isRowEditing(this.newRow)) {\r\n            // Insert a new row\r\n            this.table.value.unshift(this.newRow);\r\n            // Set the new row in edit mode\r\n            this.table.initRowEdit(this.newRow);\r\n\r\n            event.preventDefault();\r\n        // }\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  local: true,\r\n  scheme: 'https://',\r\n  host: 'localhost',\r\n  port: ':443',\r\n\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class Utils {\r\n    constructor() {\r\n    }\r\n\r\n    static cloneArray(from: any[], to: any[]) {\r\n        from.forEach((v, i) => {\r\n            const val = (typeof v === 'object') ? Object.assign({}, v) : v;\r\n            to.push(val);\r\n        });\r\n    }\r\n}\r\n","export class ModelBase {\r\n    Id?: string;\r\n}","import { ModelBase } from \"./base.model\";\r\n\r\nexport class Language extends ModelBase {\r\n    Title?: string;\r\n    Mnemonic?: string;\r\n}\r\n","import { Component, forwardRef, Inject, Input, OnInit } from '@angular/core';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { Utils } from 'src/app/helpers/utils';\r\nimport { RestaurantCategory } from 'src/app/shared/models/restaurant-category.model';\r\nimport { RestaurantProduct } from 'src/app/shared/models/restaurant-product.model';\r\nimport { RestaurantService } from 'src/app/shared/services/restaurant.service';\r\nimport { RestaurantComponent } from '../restaurant.component';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class ProductComponent implements OnInit {\r\n\r\n  @Input() languageId!: string;\r\n  @Input() restaurantId!: string;\r\n  @Input() category!: RestaurantCategory;\r\n  @Input() products!: RestaurantProduct[];\r\n\r\n  oldProducts: RestaurantProduct[] = [];\r\n  producsToSave: RestaurantProduct[] = [];\r\n\r\n  isEditMode: boolean = false;\r\n  categoryOrderChange: boolean = false;\r\n\r\n  constructor(\r\n    @Inject(forwardRef(() => RestaurantComponent)) private restaurantComponent: RestaurantComponent,\r\n    private restaurantService: RestaurantService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    Utils.cloneArray(this.products, this.oldProducts);\r\n  }\r\n\r\n  addNewProduct() {\r\n    return { ProductId: '', DefaultTitle: '', Title: '', Description: '', UnitOfMeasure: '', Price: '' };\r\n  }\r\n\r\n  onSave() {\r\n    this.products.forEach(product => {\r\n      let found = this.oldProducts.find(x => x.ProductId == product.ProductId);\r\n      if (!product.ProductId || (product.DefaultTitle !== found?.DefaultTitle || product.Title !== found?.Title || product.Description !== found?.Description || product.Price !== found?.Price)) {\r\n        if (!this.producsToSave.includes(product)) {\r\n          this.producsToSave.push(product);\r\n        }\r\n      }\r\n    });\r\n\r\n    const dataToSave = { LanguageId: this.languageId, RestaurantId: this.restaurantId, CategoryId: this.category.CategoryId, Products: this.producsToSave };\r\n\r\n    this.restaurantService.post(dataToSave).subscribe(\r\n      res => {\r\n        this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Operation successfully executed.', life: 3000 });\r\n        this.isEditMode = false;\r\n        if (this.categoryOrderChange) {\r\n          this.updateCategory();\r\n        }\r\n        this.restaurantComponent.loadData();\r\n      },\r\n      err => console.log(err));\r\n\r\n  }\r\n\r\n  updateCategory() {\r\n    let updateData = { RestaurantId: this.restaurantId, Category: this.category }\r\n\r\n    this.restaurantService.updateCategories(updateData).subscribe(res => {\r\n      // this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Operation successfully executed.', life: 3000 });\r\n      this.restaurantComponent.loadData();\r\n    }, err => console.log(err));\r\n  }\r\n\r\n  deleteCategory() {\r\n    this.confirmationService.confirm({\r\n      message: 'This category and all its products will be deleted! Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n        let deleteData = { RestaurantId: this.restaurantId, Category: this.category }\r\n\r\n        this.restaurantService.deleteCategories(deleteData).subscribe(res => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Operation successfully executed.', life: 3000 });\r\n          this.restaurantComponent.loadData();\r\n        }, err => console.log(err));\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteProduct(e: any, product: RestaurantProduct) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n        let deleteData = { RestaurantId: this.restaurantId, CategoryId: this.category.CategoryId, Product: product }\r\n\r\n        this.restaurantService.deleteProduct(deleteData).subscribe(res => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Operation successfully executed.', life: 3000 });\r\n          this.restaurantComponent.loadData();\r\n        }, err => console.log(err));\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange(e: any) {\r\n    this.isEditMode = true;\r\n  };\r\n\r\n  onChangeOrder(e: any, category: RestaurantCategory) {\r\n    this.isEditMode = true;\r\n    this.categoryOrderChange = true;\r\n  }\r\n\r\n  cancel() {\r\n    this.isEditMode = false;\r\n    this.categoryOrderChange = false;\r\n    this.restaurantComponent.loadData();\r\n  }\r\n}\r\n","<p-toolbar styleClass=\"p-mb-4\">\r\n  <ng-template pTemplate=\"left\">\r\n    <button\r\n      type=\"button\"\r\n      pButton\r\n      pRipple\r\n      label=\"\"\r\n      icon=\"pi pi-plus\"\r\n      class=\"p-button-success p-mr-2\"\r\n      pAddRow\r\n      [table]=\"dt\"\r\n      [newRow]=\"addNewProduct()\"\r\n    ></button>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"right\">\r\n    <button\r\n      *ngIf=\"!isEditMode\"\r\n      pButton\r\n      pRipple\r\n      label=\"\"\r\n      icon=\"pi pi-trash\"\r\n      class=\"p-button-danger p-mr-2\"\r\n      style=\"margin-left: 1em\"\r\n      (click)=\"deleteCategory()\"\r\n    ></button>\r\n    <button\r\n      *ngIf=\"isEditMode\"\r\n      pButton\r\n      pRipple\r\n      label=\"Save\"\r\n      icon=\"pi pi-check\"\r\n      class=\"p-button-primary p-mr-2\"\r\n      (click)=\"onSave()\"\r\n    ></button>\r\n    <button\r\n      *ngIf=\"isEditMode\"\r\n      pButton\r\n      pRipple\r\n      label=\"Cancel\"\r\n      icon=\"pi pi-times\"\r\n      class=\"p-button-secondary\"\r\n      (click)=\"cancel()\"\r\n      type=\"button\"\r\n    ></button>\r\n    <b style=\"margin-left: 1em\"> Order: </b>\r\n    <p-inputNumber\r\n      inputStyleClass=\"bg-red\"\r\n      [showButtons]=\"true\"\r\n      [min]=\"10\"\r\n      [max]=\"1000000\"\r\n      [step]=\"10\"\r\n      (onInput)=\"onChangeOrder($event, category)\"\r\n      [(ngModel)]=\"category.CategoryOrder\"\r\n      mode=\"decimal\"\r\n    ></p-inputNumber>\r\n  </ng-template>\r\n</p-toolbar>\r\n<p-table\r\n  #dt\r\n  editMode=\"row\"\r\n  dataKey=\"ProductId\"\r\n  [paginator]=\"true\"\r\n  [rows]=\"10\"\r\n  [rowsPerPageOptions]=\"[10, 30, 50]\"\r\n  [value]=\"products\"\r\n>\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <th pSortableColumn=\"DefaultTitle\">\r\n        Default Title<p-sortIcon field=\"DefaultTitle\"></p-sortIcon>\r\n      </th>\r\n      <th pSortableColumn=\"Title\">\r\n        Title<p-sortIcon field=\"Title\"></p-sortIcon>\r\n      </th>\r\n      <th>Description</th>\r\n      <th>Unit Of Measure</th>\r\n      <th>Price (kn)</th>\r\n      <th style=\"width: 5.2em\"></th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template\r\n    pTemplate=\"body\"\r\n    let-product\r\n    let-editing=\"editing\"\r\n    let-ri=\"rowIndex\"\r\n  >\r\n    <tr [pEditableRow]=\"product\">\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"product.DefaultTitle\"\r\n              (change)=\"onChange($event)\"\r\n              style=\"width: 100%\"\r\n            />\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ product.DefaultTitle }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"product.Title\"\r\n              (change)=\"onChange($event)\"\r\n              style=\"width: 100%\"\r\n            />\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ product.Title }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"product.Description\"\r\n              (change)=\"onChange($event)\"\r\n              style=\"width: 100%\"\r\n            />\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ product.Description }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"product.UnitOfMeasure\"\r\n              (change)=\"onChange($event)\"\r\n            />\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ product.UnitOfMeasure }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <p-inputNumber\r\n              mode=\"decimal\"\r\n              [minFractionDigits]=\"2\"\r\n              [(ngModel)]=\"product.Price\"\r\n              (onInput)=\"onChange($event)\"\r\n            ></p-inputNumber>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ product.Price }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n      <td>\r\n        <button\r\n          *ngIf=\"!isEditMode\"\r\n          pButton\r\n          pRipple\r\n          label=\"\"\r\n          icon=\"pi pi-times\"\r\n          class=\"p-button-text p-button-danger p-button-rounded\"\r\n          style=\"margin-left: 1em\"\r\n          (click)=\"deleteProduct($event, product)\"\r\n        ></button>\r\n      </td></tr\r\n  ></ng-template>\r\n\r\n  <ng-template pTemplate=\"emptymessage\">\r\n    <tr>\r\n      <td colspan=\"6\">There are no products for this category yet.</td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'RestaurantsMenuApp';\r\n}\r\n","<p-toast></p-toast>\r\n<p-confirmDialog\r\n  header=\"Confirmation\"\r\n  icon=\"pi pi-exclamation-triangle\"\r\n></p-confirmDialog>\r\n\r\n<div class=\"card\">\r\n  <app-tab-menu></app-tab-menu>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TableModule } from 'primeng/table';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { CardModule, } from 'primeng/card';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport {TreeTableModule} from 'primeng/treetable';\r\nimport { AddRowDirective } from './directives/add-row.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport {PanelMenuModule} from 'primeng/panelmenu';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport {TreeModule} from 'primeng/tree';\r\nimport { TreeNode } from 'primeng/api';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RestaurantComponent } from './restaurant/restaurant.component';\r\n\r\nimport { RestaurantService } from './shared/services/restaurant.service';\r\nimport { ProductComponent } from './restaurant/product/product.component';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { TabViewComponent } from './tab-view/tab-view.component';\r\nimport { RestaurantCategoryComponent } from './restaurant/restaurant-category/restaurant-category.component';\r\nimport { CategorySelectDialogComponent } from './dialogs/category/category-select-dialog/category-select-dialog.component';\r\nimport { CategoryComponent } from './category/category/category.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RestaurantComponent,\r\n    ProductComponent,\r\n    AddRowDirective,\r\n    TabViewComponent,\r\n    RestaurantCategoryComponent,\r\n    CategorySelectDialogComponent,\r\n    CategoryComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    TableModule,\r\n    TreeTableModule,\r\n    FormsModule,\r\n    ButtonModule,\r\n    ToolbarModule,\r\n    InputTextModule,\r\n    InputNumberModule,\r\n    ToastModule,\r\n    CardModule,\r\n    TabViewModule,\r\n    DropdownModule,\r\n    AccordionModule,\r\n    DynamicDialogModule,\r\n    MultiSelectModule,\r\n    PanelMenuModule,\r\n    PanelModule,\r\n    TreeModule,\r\n    ConfirmDialogModule\r\n  ],\r\n  providers: [RestaurantService, MessageService, ConfirmationService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, forwardRef, Inject, Input, OnInit } from '@angular/core';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { Utils } from 'src/app/helpers/utils';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryGet } from 'src/app/shared/models/extenders/category-get.model';\r\nimport { Language } from 'src/app/shared/models/language.model';\r\nimport { RestaurantService } from 'src/app/shared/services/restaurant.service';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n\r\n  categories: CategoryGet[] = [];\r\n  oldCategories: CategoryGet[] = [];\r\n  languages!: Language[];\r\n  selectedLanguage?: Language;\r\n  @Input() language!: string;\r\n  isEditMode: boolean = false;\r\n  categoriesToSave: CategoryGet[] = [];\r\n\r\n  constructor(\r\n    private restaurantService: RestaurantService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.restaurantService.getLanguages().then(data => {\r\n      this.languages = data;\r\n      this.initDropDownLanguage();\r\n      this.initCategories();\r\n    });\r\n  }\r\n\r\n  initCategories() {\r\n    this.oldCategories = [];\r\n    this.restaurantService.getAllCategories(this.selectedLanguage!.Id).then(data => {\r\n      this.categories = data;\r\n      this.initCategoriesByLanguage(this.categories, this.selectedLanguage!.Id);\r\n      Utils.cloneArray(this.categories, this.oldCategories);\r\n    });\r\n  }\r\n\r\n  initCategoriesByLanguage(data: CategoryGet[], language?: string) {\r\n    this.categories = [];\r\n    data.forEach((item) => {\r\n      let translation = item.Translations?.find(x => x.LanguageId === language);\r\n      item.CategoryTitle = translation?.Title ? translation?.Title : '';\r\n      item.CategoryDescription = translation?.Description ? translation?.Description : '';\r\n      this.categories.push(item);\r\n    });\r\n  }\r\n\r\n  languageChange(selectedLanguage?: Language) {\r\n    this.initCategories();\r\n  }\r\n\r\n  initDropDownLanguage() {\r\n    this.selectedLanguage = this.languages.find((language) => {\r\n      if (language.Mnemonic == \"hr\") {\r\n        this.language = language?.Id || \"\";\r\n        return language;\r\n      }\r\n      return new Language;\r\n    }) || new Language;\r\n  }\r\n\r\n  onChange(e: any) {\r\n    this.isEditMode = true;\r\n  };\r\n\r\n  cancel() {\r\n    this.isEditMode = false;\r\n    this.loadData();\r\n  }\r\n\r\n  onSave() {\r\n    this.categories.forEach((category: CategoryGet) => {\r\n      let found = this.oldCategories!.find(x => x.Id == category.Id);\r\n      if ((category.DefaultTitle !== found?.DefaultTitle || category.CategoryTitle !== found?.CategoryTitle || category.CategoryDescription !== found?.CategoryDescription)) {\r\n        if (!this.categoriesToSave.includes(category)) {\r\n          this.categoriesToSave.push(category);\r\n        }\r\n      }\r\n    });\r\n\r\n    const dataToSave = { LanguageId: this.selectedLanguage?.Id, Categories: this.categoriesToSave };\r\n    console.log(dataToSave)\r\n\r\n    this.restaurantService.insertOrUpdateCategories(dataToSave).subscribe(\r\n      res => {\r\n        this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Operation successfully executed.', life: 3000 });\r\n        this.isEditMode = false;\r\n\r\n        this.loadData();\r\n        this.categoriesToSave = [];\r\n      },\r\n      err => console.log(err));\r\n  }\r\n\r\n  addNewCategory() {\r\n    return { Id: '', DefaultTitle: '', CategoryTitle: '', CategoryDescription: '' };\r\n  }\r\n\r\n  deleteCategory(e: any, category: Category) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n        let deleteData = { Category: category }\r\n\r\n        this.restaurantService.deleteCategory(deleteData).subscribe(res => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Operation successfully executed.', life: 3000 });\r\n          this.loadData();\r\n        }, err => console.log(err));\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<p-dropdown\r\n  [options]=\"languages\"\r\n  [(ngModel)]=\"selectedLanguage\"\r\n  (onChange)=\"languageChange(selectedLanguage)\"\r\n  optionLabel=\"Mnemonic\"\r\n  dataKey=\"Id\"\r\n  [filter]=\"true\"\r\n  filterBy=\"Mnemonic\"\r\n  [showClear]=\"false\"\r\n  placeholder=\"Select a Language\"\r\n  styleClass=\"dropdown-custom\"\r\n>\r\n  <ng-template pTemplate=\"selectedItem\">\r\n    <div *ngIf=\"selectedLanguage\">\r\n      <div>{{ selectedLanguage.Mnemonic }}</div>\r\n    </div>\r\n  </ng-template>\r\n</p-dropdown>\r\n<br />\r\n<br />\r\n\r\n<p-toolbar styleClass=\"p-mb-4\">\r\n  <ng-template pTemplate=\"left\">\r\n    <button\r\n      type=\"button\"\r\n      pButton\r\n      pRipple\r\n      label=\"\"\r\n      icon=\"pi pi-plus\"\r\n      class=\"p-button-success p-mr-2\"\r\n      pAddRow\r\n      [table]=\"dt\"\r\n      [newRow]=\"addNewCategory()\"\r\n    ></button>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"right\">\r\n    <button\r\n      *ngIf=\"isEditMode\"\r\n      pButton\r\n      pRipple\r\n      label=\"Save\"\r\n      icon=\"pi pi-check\"\r\n      class=\"p-button-primary p-mr-2\"\r\n      (click)=\"onSave()\"\r\n    ></button>\r\n    <button\r\n      *ngIf=\"isEditMode\"\r\n      pButton\r\n      pRipple\r\n      label=\"Cancel\"\r\n      icon=\"pi pi-times\"\r\n      class=\"p-button-secondary\"\r\n      (click)=\"cancel()\"\r\n      type=\"button\"\r\n    ></button>\r\n  </ng-template>\r\n</p-toolbar>\r\n<p-table\r\n  #dt\r\n  styleClass=\"p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n  editMode=\"row\"\r\n  dataKey=\"Id\"\r\n  [paginator]=\"true\"\r\n  [rows]=\"10\"\r\n  [rowsPerPageOptions]=\"[10, 30, 50]\"\r\n  [value]=\"categories\"\r\n>\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <th pSortableColumn=\"DefaultTitle\">\r\n        Default Title<p-sortIcon field=\"DefaultTitle\"></p-sortIcon>\r\n      </th>\r\n      <th pSortableColumn=\"Title\">\r\n        Title<p-sortIcon field=\"Title\"></p-sortIcon>\r\n      </th>\r\n      <th>Description</th>\r\n      <th style=\"width: 5.2em\"></th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template\r\n    pTemplate=\"body\"\r\n    let-category\r\n    let-editing=\"editing\"\r\n    let-ri=\"rowIndex\"\r\n  >\r\n    <tr [pEditableRow]=\"category\">\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"category.DefaultTitle\"\r\n              (change)=\"onChange($event)\"\r\n              style=\"width: 100%\"\r\n            />\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ category.DefaultTitle }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"category.CategoryTitle\"\r\n              (change)=\"onChange($event)\"\r\n              style=\"width: 100%\"\r\n            />\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ category.CategoryTitle }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"category.CategoryDescription\"\r\n              (change)=\"onChange($event)\"\r\n              style=\"width: 100%\"\r\n            />\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ category.CategoryDescription }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n\r\n      <td>\r\n        <button\r\n          *ngIf=\"!isEditMode\"\r\n          pButton\r\n          pRipple\r\n          label=\"\"\r\n          icon=\"pi pi-times\"\r\n          class=\"p-button-text p-button-danger p-button-rounded\"\r\n          style=\"margin-left: 1em\"\r\n          (click)=\"deleteCategory($event, category)\"\r\n        ></button>\r\n      </td></tr\r\n  ></ng-template>\r\n\r\n  <ng-template pTemplate=\"emptymessage\">\r\n    <tr>\r\n      <td colspan=\"6\">There are no products for this category yet.</td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>\r\n","<div style=\"width: 100%\">\r\n  <p-multiSelect\r\n    defaultLabel=\"Select categories\"\r\n    appendTo=\"body\"\r\n    [options]=\"categories\"\r\n    [(ngModel)]=\"selectedCategories\"\r\n    display=\"chip\"\r\n    optionLabel=\"DefaultTitle\"\r\n    optionValue=\"Id\"\r\n    [style]=\"{ width: '100%' }\"\r\n  ></p-multiSelect>\r\n\r\n  <button\r\n    style=\"margin-top: 1em; float: right\"\r\n    pButton\r\n    pRipple\r\n    label=\"Cancel\"\r\n    icon=\"pi pi-times\"\r\n    class=\"p-button-secondary\"\r\n    (click)=\"cancel()\"\r\n    type=\"button\"\r\n  ></button>\r\n  <button\r\n  *ngIf=\"selectedCategories.length > 0\"\r\n    style=\"margin-top: 1em;margin-right: 0.5em; float: right\"\r\n    pButton\r\n    pRipple\r\n    label=\"Save\"\r\n    icon=\"pi pi-check\"\r\n    class=\"p-button-primary\"\r\n    (click)=\"save()\"\r\n    type=\"button\"\r\n  ></button>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { RestaurantCategory } from 'src/app/shared/models/restaurant-category.model';\r\nimport { RestaurantService } from 'src/app/shared/services/restaurant.service';\r\n\r\n@Component({\r\n  selector: 'app-category-select-dialog',\r\n  templateUrl: './category-select-dialog.component.html',\r\n  styleUrls: ['./multiselect-categories.scss']\r\n})\r\nexport class CategorySelectDialogComponent implements OnInit {\r\n\r\n  categories: Category[] = [];\r\n  selectedCategories: Category[] = [];\r\n\r\n  constructor(\r\n    private restaurantService: RestaurantService,\r\n    public ref: DynamicDialogRef,\r\n    public config: DynamicDialogConfig\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.restaurantService.getCategories(this.config.data?.languageId, this.config.data?.restaurantId).then(data => {\r\n      this.categories = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this.selectCategories(this.selectedCategories);\r\n  }\r\n\r\n  cancel() {\r\n    this.selectCategories([]);\r\n    this.ref.close();\r\n  }\r\n\r\n  selectCategories(categories: Category[]) {\r\n    this.ref.close(categories);\r\n  }\r\n}\r\n","import { Input, ViewChild } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { Language } from '../shared/models/language.model';\r\nimport { RestaurantCategory } from '../shared/models/restaurant-category.model';\r\nimport { Restaurant } from '../shared/models/restaurant.model';\r\nimport { RestaurantService } from '../shared/services/restaurant.service';\r\nimport { RestaurantCategoryComponent } from './restaurant-category/restaurant-category.component';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { CategorySelectDialogComponent } from '../dialogs/category/category-select-dialog/category-select-dialog.component';\r\nimport { Category } from '../shared/models/category.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-restaurant',\r\n  templateUrl: './restaurant.component.html',\r\n  styles: [`\r\n        :host ::ng-deep .p-cell-editing {\r\n            padding-top: 10 !important;\r\n            padding-bottom: 10 !important;\r\n        }\r\n    `],\r\n  providers: [DialogService]\r\n})\r\nexport class RestaurantComponent implements OnInit {\r\n\r\n  @Input() language!: string;\r\n  restaurants!: Restaurant[];\r\n  categories: RestaurantCategory[] = [];\r\n\r\n  activeIndex: number = 0;\r\n  selectedLanguage?: Language;\r\n  languages!: Language[];\r\n  oldRestaurants: Restaurant[] = [];\r\n  restaurantsToSave: Restaurant[] = [];\r\n  isEditMode: boolean = false;\r\n  @ViewChild('ch') private restaurantCategory!: RestaurantCategoryComponent;\r\n\r\n  constructor(\r\n    private dialogService: DialogService,\r\n    private restaurantService: RestaurantService,\r\n    private messageService: MessageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.restaurantService.getLanguages().then(data => {\r\n      this.languages = data;\r\n      this.initDropDownLanguage();\r\n      this.restaurantService.getRestaurants(this.selectedLanguage!.Id).then(data => {\r\n        this.restaurants = data;\r\n        this.initCategoriesByLanguage(this.restaurants, this.selectedLanguage!.Id);\r\n      });\r\n    });\r\n  }\r\n\r\n  initDropDownLanguage() {\r\n    this.selectedLanguage = this.languages.find((language) => {\r\n      if (language.Mnemonic == \"hr\") {\r\n        this.language = language.Id || \"\";\r\n        return language;\r\n      }\r\n      return new Language;\r\n    }) || new Language;\r\n  }\r\n\r\n  languageChange(selectedLanguage?: Language) {\r\n    this.restaurantService.getRestaurants(selectedLanguage!.Id).then(data => {\r\n      this.initCategoriesByLanguage(data, selectedLanguage!.Id)\r\n    });\r\n\r\n    this.language = selectedLanguage?.Id || \"\";\r\n\r\n    this.restaurantService.getRestaurants(this.selectedLanguage!.Id).then(data => {\r\n      this.restaurants = data;\r\n    });\r\n  }\r\n\r\n  initCategoriesByLanguage(data: Restaurant[], language?: string) {\r\n    data.forEach((item) => {\r\n      let translation = item.Translations?.find(x => x.LanguageId === language);\r\n      this.categories = translation?.RestaurantCategories !== undefined ? translation!.RestaurantCategories : [];\r\n      // console.log(\"KATEGORIJE \" + item.Title, this.categories)\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    return { Id: '', Title: '', Description: '' };\r\n  }\r\n\r\n  cancel() {\r\n    this.isEditMode = false;\r\n    this.loadData();\r\n  }\r\n\r\n  onRowEditSave() {\r\n    this.restaurants.forEach(restaurant => {\r\n      let found = this.oldRestaurants.find(x => x.Id == restaurant.Id);\r\n      if (!restaurant.Id || (restaurant.Title !== found?.Title || restaurant.Description !== found?.Description)) {\r\n        if (!this.restaurantsToSave.includes(restaurant)) {\r\n          this.restaurantsToSave.push(restaurant);\r\n        }\r\n      }\r\n    });\r\n\r\n    const dataToSave = { Restaurants: this.restaurantsToSave };\r\n    //this.apiHelper.post(dataToSave);\r\n    this.restaurantService.postRestaurants(dataToSave).subscribe(\r\n      res => {\r\n        this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Operation successfully executed.', life: 3000 });\r\n        this.isEditMode = false;\r\n        this.loadData();\r\n      },\r\n      err => console.log(err));\r\n  }\r\n\r\n  onChange(e: any) {\r\n    this.isEditMode = true;\r\n  };\r\n\r\n  categoryDialogReference!: DynamicDialogRef;\r\n\r\n  showCategoriesDialog(restaurantId: string) {\r\n    this.categoryDialogReference = this.dialogService.open(CategorySelectDialogComponent, {\r\n      header: 'Choose a Categories',\r\n      width: '30%',\r\n      contentStyle: { \"max-height\": \"500px\", \"overflow\": \"auto\" },\r\n      //baseZIndex: 10000,\r\n      data: { restaurantId: restaurantId, languageId: this.language, existingCategories: this.restaurantCategory.categories }\r\n    });\r\n\r\n    this.saveCategories(restaurantId);\r\n  }\r\n\r\n  saveCategories(restaurantId: string) {\r\n    this.categoryDialogReference.onClose.subscribe((selectedCategories: Category[]) => {\r\n      if (selectedCategories?.length > 0) {\r\n\r\n        let saveData = { RestaurantId: restaurantId, Categories: selectedCategories }\r\n        this.restaurantService.saveCategories(saveData).subscribe(res => {\r\n          console.log(res);\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Operation successfully executed.', life: 3000 });\r\n          this.loadData();\r\n        }, err => console.log(err))\r\n      }\r\n    });\r\n  }\r\n}\r\n","<p-dropdown\r\n  [options]=\"languages\"\r\n  [(ngModel)]=\"selectedLanguage\"\r\n  (onChange)=\"languageChange(selectedLanguage)\"\r\n  optionLabel=\"Mnemonic\"\r\n  dataKey=\"Id\"\r\n  [filter]=\"true\"\r\n  filterBy=\"Mnemonic\"\r\n  [showClear]=\"false\"\r\n  placeholder=\"Select a Language\"\r\n  styleClass=\"dropdown-custom\"\r\n>\r\n  <ng-template pTemplate=\"selectedItem\">\r\n    <div *ngIf=\"selectedLanguage\">\r\n      <div>{{ selectedLanguage.Mnemonic }}</div>\r\n    </div>\r\n  </ng-template>\r\n</p-dropdown>\r\n<br />\r\n<br />\r\n<p-toolbar styleClass=\"p-mb-4\">\r\n  <ng-template pTemplate=\"left\">\r\n    <button\r\n      type=\"button\"\r\n      pButton\r\n      pRipple\r\n      label=\"\"\r\n      icon=\"pi pi-plus\"\r\n      class=\"p-button-success p-mr-2\"\r\n      pAddRow\r\n      [table]=\"dt\"\r\n      [newRow]=\"addNew()\"\r\n    ></button>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"right\">\r\n    <button\r\n      *ngIf=\"isEditMode\"\r\n      pButton\r\n      pRipple\r\n      label=\"Save\"\r\n      icon=\"pi pi-check\"\r\n      class=\"p-button-primary p-mr-2\"\r\n      (click)=\"onRowEditSave()\"\r\n    ></button>\r\n    <button\r\n      *ngIf=\"isEditMode\"\r\n      pButton\r\n      pRipple\r\n      label=\"Cancel\"\r\n      icon=\"pi pi-times\"\r\n      class=\"p-button-secondary\"\r\n      (click)=\"cancel()\"\r\n      type=\"button\"\r\n    ></button>\r\n  </ng-template>\r\n</p-toolbar>\r\n<p-table\r\n  #dt\r\n  styleClass=\"p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n  editMode=\"row\"\r\n  dataKey=\"Id\"\r\n  [value]=\"restaurants\"\r\n  [paginator]=\"true\"\r\n  [rows]=\"3\"\r\n  [rowsPerPageOptions]=\"[10, 30, 50]\"\r\n>\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <th style=\"width: 4rem\"></th>\r\n      <th pSortableColumn=\"Title\">\r\n        Title <p-sortIcon field=\"Title\"></p-sortIcon>\r\n      </th>\r\n      <th pSortableColumn=\"Description\">\r\n        Description <p-sortIcon field=\"Description\"></p-sortIcon>\r\n      </th>\r\n      <th>Style code</th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template\r\n    pTemplate=\"body\"\r\n    let-restaurant\r\n    let-expanded=\"expanded\"\r\n    let-editing=\"editing\"\r\n    let-ri=\"rowIndex\"\r\n  >\r\n    <tr [pEditableRow]=\"restaurant\">\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          [pRowToggler]=\"restaurant\"\r\n          class=\"p-button-text p-button-rounded p-button-plain\"\r\n          [icon]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"\r\n        ></button>\r\n      </td>\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"restaurant.Title\"\r\n              (change)=\"onChange($event)\"\r\n              required\r\n            />\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ restaurant.Title }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"restaurant.Description\"\r\n              (change)=\"onChange($event)\"\r\n              required\r\n            />\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ restaurant.Description }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n      <td pEditableColumn>\r\n        <p-cellEditor>\r\n          <ng-template pTemplate=\"input\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"restaurant.StyleCode\"\r\n              (change)=\"onChange($event)\"\r\n              required\r\n            />\r\n          </ng-template>\r\n          <ng-template pTemplate=\"output\">\r\n            {{ restaurant.StyleCode }}\r\n          </ng-template>\r\n        </p-cellEditor>\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n\r\n  <ng-template\r\n    pTemplate=\"rowexpansion\"\r\n    let-restaurant\r\n    let-editing=\"editing\"\r\n    let-ri=\"rowIndex\"\r\n  >\r\n    <tr>\r\n      <td colspan=\"7\">\r\n        <p-toolbar>\r\n          <ng-template pTemplate=\"left\">\r\n            <b>CATEGORIES</b>\r\n            <button\r\n              pButton\r\n              pRipple\r\n              label=\"\"\r\n              icon=\"pi pi-plus\"\r\n              class=\"p-button-success p-mr-2\"\r\n              style=\"margin-left: 1em\"\r\n              (click)=\"showCategoriesDialog(restaurant.Id)\"\r\n            ></button>\r\n          </ng-template>\r\n        </p-toolbar>\r\n        <div *ngFor=\"let t of restaurant.Translations\">\r\n          <app-restaurant-category\r\n            #ch\r\n            *ngIf=\"t.LanguageId == language\"\r\n            [languageId]=\"language\"\r\n            [restaurantId]=\"restaurant.Id\"\r\n            [categories]=\"t!.RestaurantCategories!\"\r\n          ></app-restaurant-category>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>\r\n","import { forwardRef, Inject } from '@angular/core';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { MessageService, TreeNode } from 'primeng/api';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { CategorySelectDialogComponent } from 'src/app/dialogs/category/category-select-dialog/category-select-dialog.component';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { RestaurantCategory } from 'src/app/shared/models/restaurant-category.model';\r\nimport { RestaurantService } from 'src/app/shared/services/restaurant.service';\r\nimport { RestaurantComponent } from '../restaurant.component';\r\n\r\n@Component({\r\n  selector: 'app-restaurant-category',\r\n  templateUrl: './restaurant-category.component.html',\r\n  styleUrls: []\r\n})\r\nexport class RestaurantCategoryComponent implements OnInit {\r\n\r\n  @Input() categories!: RestaurantCategory[];\r\n  @Input() restaurantId!: string;\r\n  @Input() languageId!: string;\r\n\r\n  treeNodes: TreeNode<RestaurantCategory>[] = [];\r\n  cols!: any[];\r\n\r\n  constructor(\r\n    private dialogService: DialogService,\r\n    private messageService: MessageService,\r\n    @Inject(forwardRef(() => RestaurantComponent)) private restaurantComponent: RestaurantComponent,\r\n    private restaurantService: RestaurantService\r\n  ) {\r\n    this.cols = [\r\n      { field: 'CategoryTitle', header: 'Category' },\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.categoriesToTreeNodes(this.categories);\r\n  }\r\n\r\n  private categoriesToTreeNodes(categories: RestaurantCategory[]) {\r\n    for (let cont of categories) {\r\n      this.treeNodes.push(this.mainCategoriesToTreeNode(cont));\r\n    }\r\n  }\r\n\r\n  private mainCategoriesToTreeNode(category: RestaurantCategory): TreeNode {\r\n    let categoriesTreeNodes: TreeNode<RestaurantCategory>[] = [];\r\n\r\n    for (let c of category.RestaurantCategories!) {\r\n      categoriesTreeNodes.push(this.categoryToTreeNode(c));\r\n    }\r\n\r\n    return {\r\n      expanded: categoriesTreeNodes.length > 0 ? true : false,\r\n      label: category.CategoryTitle ? category.CategoryTitle : '',\r\n      data: category,\r\n      children: categoriesTreeNodes\r\n    };\r\n  }\r\n\r\n  private categoryToTreeNode(category: RestaurantCategory): TreeNode {\r\n    let categoriesTreeNodes: TreeNode<RestaurantCategory>[] = [];\r\n    for (let c of category.RestaurantCategories!) {\r\n      categoriesTreeNodes.push(this.categoryToTreeNode(c));\r\n    }\r\n    return {\r\n      expanded: categoriesTreeNodes.length > 0 ? true : false,\r\n      label: category.CategoryTitle ? category.CategoryTitle : '',\r\n      data: category,\r\n      children: categoriesTreeNodes,\r\n    }\r\n  }\r\n\r\n  categoryDialogReference!: DynamicDialogRef;\r\n\r\n  showCategoriesDialog(e: any, restaurantCategory: RestaurantCategory) {\r\n    e.stopPropagation(); // prevent open accordion on button click\r\n    // if (restaurantCategory!.RestaurantCategories!.length == 0) {\r\n    this.categoryDialogReference = this.dialogService.open(CategorySelectDialogComponent, {\r\n      header: 'Choose a Categories',\r\n      width: '30%',\r\n      contentStyle: { \"max-height\": \"500px\", \"overflow\": \"auto\" },\r\n      //baseZIndex: 10000,\r\n      data: { restaurantId: this.restaurantId, languageId: this.languageId, existingCategories: this.categories }\r\n    });\r\n\r\n    this.saveCategories(this.restaurantId, restaurantCategory);\r\n    // }\r\n  }\r\n\r\n  saveCategories(restaurantId: string, restaurantCategory: RestaurantCategory) {\r\n    this.categoryDialogReference.onClose.subscribe((selectedCategories: Category[]) => {\r\n      if (selectedCategories?.length > 0) {\r\n\r\n        let saveData = { RestaurantId: restaurantId, Categories: selectedCategories, Parent: restaurantCategory }\r\n\r\n        this.restaurantService.saveCategories(saveData).subscribe(res => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Operation successfully executed.', life: 3000 });\r\n          this.restaurantComponent.loadData();\r\n        }, err => console.log(err));\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeOrder(e: any, restaurantCategory: RestaurantCategory) {\r\n    restaurantCategory.OrderChanged = true;\r\n  }\r\n\r\n  cancel(e: any, restaurantCategory: RestaurantCategory) {\r\n    restaurantCategory.OrderChanged = false;\r\n    this.restaurantComponent.loadData();\r\n  }\r\n\r\n  updateCategory(e: any, restaurantCategory: RestaurantCategory) {\r\n    let updateData = { RestaurantId: this.restaurantId, Category: restaurantCategory }\r\n\r\n    this.restaurantService.updateCategories(updateData).subscribe(res => {\r\n      this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Operation successfully executed.', life: 3000 });\r\n      this.restaurantComponent.loadData();\r\n    }, err => console.log(err));\r\n  }\r\n\r\n}\r\n","<p-treeTable [value]=\"treeNodes\" [columns]=\"cols\">\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <th style=\"width: 24em\"></th>\r\n      <th></th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template\r\n    pTemplate=\"body\"\r\n    let-rowNode\r\n    let-rowData=\"rowData\"\r\n    let-columns=\"columns\"\r\n  >\r\n    <tr>\r\n      <td>\r\n        <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n        <b>{{ rowData.CategoryTitle }}</b>\r\n        <button\r\n          *ngIf=\"rowData.Products.length == 0\"\r\n          pButton\r\n          pRipple\r\n          label=\"\"\r\n          icon=\"pi pi-plus\"\r\n          class=\"p-button-success p-mr-2\"\r\n          style=\"margin-left: 1em\"\r\n          (click)=\"showCategoriesDialog($event, rowData)\"\r\n        ></button>\r\n      </td>\r\n      <td>\r\n        <app-product\r\n          *ngIf=\"rowData.RestaurantCategories.length == 0\"\r\n          [languageId]=\"languageId\"\r\n          [restaurantId]=\"restaurantId\"\r\n          [category]=\"rowData\"\r\n          [products]=\"rowData.Products\"\r\n        ></app-product>\r\n        <div\r\n          *ngIf=\"rowData.RestaurantCategories.length > 0\"\r\n          style=\"float: right\"\r\n        >\r\n          <button\r\n            *ngIf=\"rowData.OrderChanged\"\r\n            pButton\r\n            pRipple\r\n            label=\"Save\"\r\n            icon=\"pi pi-check\"\r\n            class=\"p-button-primary p-mr-2\"\r\n            (click)=\"updateCategory($event, rowData)\"\r\n          ></button>\r\n          <button\r\n            *ngIf=\"rowData.OrderChanged\"\r\n            pButton\r\n            pRipple\r\n            label=\"Cancel\"\r\n            icon=\"pi pi-times\"\r\n            class=\"p-button-secondary\"\r\n            type=\"button\"\r\n            (click)=\"cancel($event, rowData)\"\r\n          ></button>\r\n          <b> Order: </b>\r\n          <p-inputNumber\r\n            inputStyleClass=\"bg-red\"\r\n            [showButtons]=\"true\"\r\n            [min]=\"10\"\r\n            [max]=\"1000000\"\r\n            [step]=\"10\"\r\n            mode=\"decimal\"\r\n            [(ngModel)]=\"rowData.CategoryOrder\"\r\n            (onInput)=\"onChangeOrder($event, rowData)\"\r\n          ></p-inputNumber>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n</p-treeTable>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Category } from '../models/category.model';\r\nimport { Language } from '../models/language.model';\r\nimport { Restaurant } from '../models/restaurant.model';\r\nimport { CategoryTranslation } from '../models/category-translation.model';\r\nimport { CategoryGet } from '../models/extenders/category-get.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestaurantService {\r\n\r\n  readonly baseUrl = environment.scheme + environment.host + environment.port + '/api';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRestaurants(languageId?: string) {\r\n    return this.http.get<any>(this.baseUrl + \"/Restaurants/\" + languageId)\r\n      .toPromise()\r\n      .then(res => <Restaurant[]>res)\r\n      .then(data => {\r\n        return data;\r\n      });\r\n  }\r\n\r\n  getLanguages() {\r\n    return this.http.get<any>(this.baseUrl + \"/Languages\")\r\n      .toPromise()\r\n      .then(res => <Language[]>res)\r\n      .then(data => {\r\n        return data;\r\n      });\r\n  }\r\n\r\n  getAllCategories(languageId?: string) {\r\n    return this.http.get<any>(this.baseUrl + \"/Categories/\" + languageId)\r\n      .toPromise()\r\n      .then(res => <CategoryGet[]>res)\r\n      .then(data => {\r\n        return data;\r\n      });\r\n  }\r\n\r\n  getCategories(languageId?: string, restaurantId?: string) {\r\n    return this.http.get<any>(this.baseUrl + \"/Categories/\" + languageId + \"/\" + restaurantId)\r\n      .toPromise()\r\n      .then(res => <Category[]>res)\r\n      .then(data => {\r\n        return data;\r\n      });\r\n  }\r\n\r\n  post(data: any) {\r\n    return this.http.post<any>(this.baseUrl + \"/Restaurants/\", data);\r\n  }\r\n\r\n  insertOrUpdateCategories(data: any) {\r\n    return this.http.post<any>(this.baseUrl + \"/Categories/\", data);\r\n  }\r\n\r\n  postRestaurants(data: any) {\r\n    return this.http.post<any>(this.baseUrl + \"/Restaurants/Save/\", data);\r\n  }\r\n\r\n  saveCategories(data: any) {\r\n    return this.http.post<any>(this.baseUrl + \"/Categories/Save/\", data);\r\n  }\r\n\r\n  updateCategories(data: any) {\r\n    return this.http.post<any>(this.baseUrl + \"/Categories/Update/\", data);\r\n  }\r\n\r\n  deleteCategories(data: any) {\r\n    return this.http.post<any>(this.baseUrl + \"/Categories/Delete/\", data);\r\n  }\r\n\r\n  deleteCategory(data: any) {\r\n    return this.http.post<any>(this.baseUrl + \"/Categories/DeleteOne/\", data);\r\n  }\r\n\r\n  deleteProduct(data: any) {\r\n    return this.http.post<any>(this.baseUrl + \"/Restaurants/Product/Delete/\", data);\r\n  }\r\n\r\n  postProductTranslations(translationData: { items: string[], translation: CategoryTranslation }) {\r\n    return this.http.post<any>(this.baseUrl, translationData);\r\n  }\r\n\r\n  putProductTranslations(translation: CategoryTranslation) {\r\n    return this.http.put<any>(`${this.baseUrl}/${translation.LanguageId}`, translation);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}